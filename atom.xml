<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wandering&#39;s Blog</title>
  
  <subtitle>Huazhong University of Science and Technology</subtitle>
  <link href="https://wanderer7-sk.github.io/wandering.github.io/atom.xml" rel="self"/>
  
  <link href="https://wanderer7-sk.github.io/wandering.github.io/"/>
  <updated>2023-03-27T06:06:46.519Z</updated>
  <id>https://wanderer7-sk.github.io/wandering.github.io/</id>
  
  <author>
    <name>Wandering</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>室内行人定位轨迹的校正方法与可视化系统的设计与开发</title>
    <link href="https://wanderer7-sk.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/"/>
    <id>https://wanderer7-sk.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/</id>
    <published>2023-03-26T07:19:59.000Z</published>
    <updated>2023-03-27T06:06:46.519Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="1引言"> <center>1.引言</center></span></h2><h3><span id="11-项目背景"> 1.1 项目背景</span></h3><h4><span id="111-室内定位"> 1.1.1 室内定位</span></h4><p>随着联网移动设备的流行，以及交通的快速发展，人们对个人定位的需求越来越高。基于位置的服务也有广泛的应用，并被广泛应用于导航、追踪和导游等方面。的关键技术是导航定位，包括室外到室内的定位。传统的全球定位系统和移动通信等技术方法都在室外环境中有着较为成熟的算法和较高的精度，但是其在室内环境中的表现则不尽人意。近几十年来，室内定位技术也在不断发展进步，但是各种技术都各有优缺，如何保证行人定位的准确度和连续性，是室内定位技术研究的重点。</p><p>随着智能设备的普及，基于位置的服务(LBS)成为人们日常生活中必不可 少的一部分。现代人有 80%的时间是在室内度过的。如何在室内环境中准确地确 定用户的位置，成为近年来的一个热门研究课题。</p><p>在室外空间，以 GPS、北斗为代表的卫星定位系统能够满足人们在户外开阔 环境中的定位需求;但在室内环境中，由于建筑结构、室内障碍物对卫星信号的 阻挡和反射，卫星定位系统会产生较大的定位误差。</p><p>因此，研究者们提出了多种基于无线信号的室内定位方案，利用的信号包括 Wi-Fi、蓝牙、超声波、超宽带、惯性传感器、红外线、声信号等。</p><h4><span id="112-行人行位推算"> 1.1.2 行人行位推算</span></h4><p>在行人定位领域 [7]，行人航位推算 (PDR[2]) 是一种主流方法。传统的 PDR 算法依赖惯性测量单元 (Inertia Measurement Unit，IMU) 收集行人的加速度、角速度等信息，进而推算行人的运动轨迹，见图 1-1。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.15999999999999992em" columnalign="right center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>l</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><msub><mi>y</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>l</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>×</mo><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rcl}x_t=x_{t-1}+l_{t-1}\times \cos \theta_{t-1}\\y_t=y_{t-1}+l_{t-1}\times \sin \theta_{t-1} \tag{1}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span><span class="tag"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>PDR 算法主要包括步频检测、步长估计、航向估计三个任务</p><h4><span id="113-基础pdr算法"> 1.1.3 基础PDR算法</span></h4><p>• 步频检测: 波峰测频法</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/image-1.png" alt="图1.1 PDR示意图"></p><p>被测人员走动且手持终端时，随着人的周期性运动，三轴加速度传感器的波形也会产生周期性的变化，见图 1-2，其中以竖直方向（Z 轴）上的加速度变化最为明显。当一个有效波峰出现，即可认为移动了一步。按此原理即可估计出行人的步频。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/image-2.png" alt="图1.2 三轴加速度传感器波形"></p><p>• 步长估计:Weinberg 算法<br>步长估计利用 Weinberg 算法实现，与最大加速度和最小加速度相关。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>l</mi><mi>n</mi></msub><mo>=</mo><mi>K</mi><mo>×</mo><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>n</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msubsup><mo>−</mo><msubsup><mi>a</mi><mi>n</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msubsup><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">l_n = K \times (a_n^{max}-a_n^{min}) \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">l_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 n 步的步长；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>n</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">a_n^{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>n 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>n</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">a_n^{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>分别表示第 n 步的 Z 轴加速度最大值和最小值；K 为常数。<br>• 航向估计: 角速度积分<br>航向估计通常使用陀螺仪和电子罗盘这两种传感器。我们这里以基于陀螺仪的航向估计算法为例。陀螺仪可以测量人运动时的三轴角速度，对角速度进行积分即可计算出运动航向的变化角度值。如果已知航向的初始值，就可以计算出当前时刻的绝对航向。</p><h4><span id="114-定位效果及评价指标"> 1.1.4 定位效果及评价指标</span></h4><p>评价一个定位算法的定位精度，我们通常有如下几个指标：</p><ol><li><p>平均定位误差：计算所有测试点的定位误差（估计位置与真实位置之间的物理距离），求平均值。</p></li><li><p>误差累积分布曲线（CDF）：各测试点定位误差的累计分布函数，它的横坐标表示定位误差，对应的纵坐标表示误差小于这个值的测试点的出现的频率。即</p></li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>F</mi><mi>E</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>E</mi><mo>≤</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">F_{E}(x)=P(E\leq x)\tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><ol start="3"><li>百分位误差：百分位误差指在 CDF 图中，纵坐标取一定百分比时，对应横坐标表示的定位误差。我们常用的百分位误差有 50% 误差，75% 误差，90% 误差等。</li></ol><h3><span id="12-系统描述"> 1.2 系统描述</span></h3><h4><span id="121-系统功能"> 1.2.1 系统功能</span></h4><p>基本要求</p><p>• 合理设计网页布局，包括：室内地图区、信息显示区、定位指标计算区等；设计一个菜<br>单作为初始界面。<br>• 在室内地图区，需要呈现室内平面图、行人真实轨迹和定位轨迹。用户能够通过点击定位轨迹中的点，查看不同位置的传感器信息（三轴加速度、角速度等）和行人航位信息（位移和航向），并在信息显示区显示。<br>• 在定位指标计算区，需要实时计算并展示当前定位轨迹的平均定位误差、百分位定位误差、CDF 曲线等定位指标。<br>• 系统需通过数据库实现信息的存储与交互。<br>• 定位轨迹至少需要实现两种<br>– 直接定位点的轨迹<br>– 使用一个直接定位点作为初始点，实现 PDR 的基础算法来估计行人轨迹。<br>• 软件系统可以通过上传 csv 文件（格式见数据文件），实时计算 PDR 算法的定位结果，绘制定位轨迹，显示定位指标</p><h4><span id="122-系统架构"> 1.2.2 系统架构</span></h4><p>该软件的 系统架构为 B/S 架构，前端负责网页设计，后端负责编写 API 接口，调用设计的算法并利用数据库中的数据并来实现对室内行人定位轨迹的校正，并在网页上实现轨迹的可视化。后端通过 API 接口平台，测试对应的 API 接口; 前端利用 API 接口，测试网页显示内容是否正确，交互是否成功。算法模型通过 CDF 曲线以及平均定位误差来判断优劣; 联调测试: 前后端联调，观察软件是否达到理想的效果，是否满足了所有的用户需求。</p><h3><span id="13-模型描述"> 1.3 模型描述</span></h3><h4><span id="131-前后端交互模型"> 1.3.1 前后端交互模型</span></h4><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/image-3.png" alt="图1.3 前后端交互模型"></p><h3><span id="132-算法模型"> 1.3.2 算法模型</span></h3><p>•<strong>波峰检测</strong>： 我们称波宽是一个波峰的周期，最简单的波峰检测是按照固定波宽的大小进行匹配，如果一个点比一个波宽内的点都高，那么就认为他是一个波峰。在本次问题中，我们会发现波峰的周期性并没有和很好，不同组的数据存在一些差别，而且会有伪波峰的存在，既存在波宽不相同的问题，也存在单调性不那么强，因此直接匹配的方法不可取。经过文献查找，查询到一种高效且鲁棒性较强的波峰检测算法，即 AMPD 算法 (自动多尺度峰值查找算法) [3]，这个方法的优势是：（1）算法本身参数较少，对信号具有良好的自适应性，唯一的假设是信号的波峰是周期的或者准周期的（在我们本次的项目中，可以近似认为）；（2）抗噪能力强，对周期性的要求也不是很高。原理上来说：首先计算一个寻找局部最大值图，即对于不同的周期，来匹配寻找极大值，并且记录不同的周期对应极大值个数，对于个数最多的，我们可以认为是周期最明显的主要部分，在这里，即代表人移动时造成的波峰。我们找到局部最大值最多的作为窗口长度（window length）在窗口长度下，匹配出来的局部最大值认为是波峰。因为原论文里面有随机数，且计算较复杂。另找到一篇改进的方法，于是在此基础上进行修改 [4] 开始效果不错，但是在测试集上效果欠佳，因为波峰不明显，出现了平顶波峰，会影响窗口长度 = 3 的局部极大值图。于是对代码进行了修改，增加了一个参数，为最大值长度，如果识别的最大值对应的窗口长度过大，会自动降低到阈值，此阈值是根据采样周期近似为 100ms，在平持状态设置为 3，在摇摆状态设置为 5，之后波峰检测效果很好，基本不会漏步。</p><p><strong>•步长估计</strong>：步长估计的方法主要有两种，第一种是对加速度求积分算出行进距离，第二种是利用加速度本身的峰峰值来计算。这里需要用到是否静止的信息来代表人的速度。但是在本问题中，有一组只有两个 stay = 1 是静止的点，很难利用速度信息。因此我们采取别的第二种方法进行处理。我们采取的是 Weinberg 算法计算方法见公式 (1-2)。K 通过近似估算，取了 0.45。在波峰检测的时候，我们对波谷和波峰都进行了检测。我们根据波峰和波谷之间的峰峰值，即可计算对应步长，我们考虑实际情况，在转弯的情况下，步长有时候会有较大浮动，因此我们对每个峰峰值单独计算步长，而不是求平均值计算一个整体的步长，平均的方法更加理想化，其实可以通过指数记忆的方式进行平均，这样既减少了步长的高频误差，同时也能考虑实际每一步本身的特性，本质还是一个混合滤波。</p><p><strong>•航向估计</strong>：航向估计是 PDR 算法中也是各种遥感、飞行器航迹等最难的一部分，对此的研究也较为深入，包括很多种方法。有欧拉角法、方向余弦法、三角函数法、Rodrigues 参数法、四元数法、等效旋转矢量法、投影向量法等各种方法。本次课程设计主要研究并实现了 Rodrigues 参数法、分解向量法、四元数等方法。</p><h2><span id="2软件设计"> <center>2.软件设计</center></span></h2><h3><span id="21-模块层次"> 2.1 模块层次</span></h3><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/image-4.png" alt="图1.4 模块层次"></p><h3><span id="22-技术选型"> 2.2 技术选型</span></h3><p>在为各模块选择实现方法时，主要考虑到学习难度、相关资源是否丰富和技术是否成熟等。前端和后端选用业界开发最常用的 vue+spring 组合，这套轻量级框架学习资源较多，能够大大简化开发难度而且技术成熟，相关支持较多，因此是比较适合的选择。算法部分采用 python语言，因为它有很多数学计算库可以方便调用。因为本人主要负责前端web开发，因此主要介绍前端技术部分。</p><p>•Vue框架：Vue.js是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和Vue生态系统支持的库开发的复杂单页应用。且Vue.js 是一个提供了 MVVM 风格双向数据绑定的 Javascript 库（无依赖别的js库，直接引入一个js文件就可以使用，跟jquery差不多），专注于View 层。它的核心是 MVVM 中的 VM，也就是 ViewModel。 ViewModel负责连接 View 和 Model，保证视图和数据的一致性，这种轻量级的架构让前端开发更加高效、便捷。[1]</p><p>•调用的外部库：Echarts、Canvas、axios</p><p>•ECharts，一个纯 Javascript 的图表库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器，底层依赖轻量级的 Canvas 类库 ZRender，提供直观，生动，可交互，可高度个性化定制的数据可视化图表,拥有丰富的图表类型，可以满足动态数据的可视化实现。</p><p>•Canvas：是HTML5提供的一种新标签,可以理解为一个矩形区域的画布，可以用Javascript控制每一个像素在上面绘画。canvas 标签使用 JavaScript 在网页上绘制图像，本身不具备绘图功能。并且canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p><p>•Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中，主要是用于向后台发起请求的，还有在请求中做更多是可控功能。</p><h3><span id="23-前端设计"> 2.3 前端设计</span></h3><p>前端设计，根据前述系统需求分析，以 Vue 作为前端框架，Vue-cli 脚手架构建基本前端项目，并规划路由，主要划分为主菜单（HomeView.vue）和信息显示 (AboutView.vue) 两个页面。其中主菜单功能包括介绍团队信息、进入软件系统等功能，实现较为简单，不做赘述。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/Home.png" alt="图1.5 HomePage"></p><p>信息显示页面包括室内地图区、信息显示区、定位指标计算区等三个子地图区。因为我们小组对所有的 6 组数据都进行了处理，因此我们的页面可以显示 6 种不同的情况。通过导入数据，给后端传递需要的数据文件，后端经过数据处理，再给前端传递回所需要的数据进行可视化操作，并且我们可以通过鼠标点击获取相应点的数据信息，具体的可视化界面如图2.3所示。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/About.png" alt="图1.6 AboutView"></p><p>下面从 AboutView 这一 vue 页面设计具体介绍前端设计思路：</p><h4><span id="231-页面路由设计"> 2.3.1 页面路由设计</span></h4><p>考虑到对室内行人系统的三大地图区设计任务要求不同，室内地图区需要呈现室内平面图、行人真实轨迹和定位轨迹；￿ 定位指标计算区，需要实时计算并展示当前定位轨迹的平均定位误差、百分位定位误差、CDF 曲线等定位指标；信息显示区需要通过点击定位轨迹中的点，查看不同位置的传感器信息。因此在该 vue 页面中需要分模块进行相应功能的实现。随后设计导入文件接口，将数据文件传递给后端；设计 1-6 六个按钮，绑定触发事件，实现后端传输六组数据的切换。导入文件设计如下所示：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 控制传递哪一类型的csv文件</span><span class="token function-variable function">modeUpload</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log(item.file);</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>mode <span class="token operator">=</span> item<span class="token punctuation">.</span>file      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateData <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateData <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateData <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"modeUpload error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">uploadP</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"uploadP function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">let</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mode<span class="token punctuation">)</span>   axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/impt/position'</span><span class="token punctuation">,</span> fd<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>     <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>       <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token function-variable function">uploadR</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"uploadR function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">let</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mode<span class="token punctuation">)</span>   axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/impt/running'</span><span class="token punctuation">,</span> fd<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>     <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>       <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token function-variable function">uploadT</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"uploadT function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">let</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mode<span class="token punctuation">)</span>   axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/impt/ground'</span><span class="token punctuation">,</span> fd<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>     <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>       <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="232-室内地图区设计"> 2.3.2 室内地图区设计</span></h4><p>室内地图区需要应用后端传递的数据，在地图上显示真实的行人轨迹、定位轨迹以及预测的行人轨迹。首先由于地图的像素坐标与在网页中显示的地图像素坐标不一致，因此需要将后端传递的位置数据进行相应的坐标变化，即通过获取原图像（0，0）与（-1.0，3.4）两点坐标所对应的现网页中的像素值，即两点对应两组新的像素坐标，进行二元一次方程组的计算，即可完成坐标变换。坐标变换后，使用 canvas 可视化工具库，在地图上渲染相应信息，成功将所需要的三条轨迹图画了出来。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">doDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// xy</span>      <span class="token comment">// let arr = JSON.parse(JSON.stringify(this.da));</span>      <span class="token comment">// let arr = this.da;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">73</span> <span class="token operator">+</span> <span class="token number">397</span><span class="token punctuation">,</span> <span class="token number">383</span> <span class="token operator">-</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">73</span> <span class="token operator">+</span> <span class="token number">397</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">383</span> <span class="token operator">-</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'black'</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">73</span> <span class="token operator">+</span> <span class="token number">397</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">383</span> <span class="token operator">-</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="233-指标计算区设计"> 2.3.3 指标计算区设计</span></h4><p>通过对后端传递误差数据进行相应的数据处理，然后利用 echart 模块进行可视化设计，将 CDF 曲线较好地在该地图区显示出来并在网页中显示相应50%、75%，90%误差所对应的数据信息。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">updateError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>error<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> sorted <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        sorted<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      sorted<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>error50 <span class="token operator">=</span> <span class="token punctuation">(</span>sorted<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">+</span>sorted<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>error75 <span class="token operator">=</span> sorted<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>error90 <span class="token operator">=</span> <span class="token punctuation">(</span>sorted<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">+</span>sorted<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>errorAve <span class="token operator">=</span> sorted<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">/</span> sorted<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>error<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>sorted<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">xAxis</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error<span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'line'</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="234-信息显示区设计"> 2.3.4 信息显示区设计</span></h4><p>信息展示区左上方为室内地图区，正上方为指标计算区。再经过坐标变换后，通过 mousedown方法，获取鼠标点击时的像素值，通过 v-if 和点击事件绑定数据判断与后端传递过来的数据文件中的数据点是否足够接近，若足够接近，则可认为鼠标点击的即为该数据点，即将该数据点的位置、加速度、角速度等信息显示在该地图区，不占用空间且提高了用户体验。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setPoint</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">let</span> pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     <span class="token literal-property property">x</span><span class="token operator">:</span> event<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>     <span class="token literal-property property">y</span><span class="token operator">:</span> event<span class="token punctuation">.</span>clientY   <span class="token punctuation">&#125;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">73</span> <span class="token operator">+</span> <span class="token number">397</span><span class="token punctuation">;</span>     <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">383</span> <span class="token operator">-</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x <span class="token operator">-</span> x<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>y <span class="token operator">-</span> y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">27</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mockData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="235-前端接口设计"> 2.3.5 前端接口设计</span></h4><p>利用axios方法，设置get与post来封装前端接口，与后端进行连接，方便后端的调用，因为本项目涉及多个服务器的接口，域名不一样，所以要进行多个代理设置，代码块实现如下所示[2]。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/**    * api接口统一管理 */</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>get<span class="token punctuation">,</span> post<span class="token punctuation">,</span> upload <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./request.js'</span><span class="token comment">// 登录</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token parameter">p</span> <span class="token operator">=></span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/API/Admin/Login'</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">query</span> <span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/predict/batch/'</span><span class="token operator">+</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">query_position</span><span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/position/batch/'</span><span class="token operator">+</span>g<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Query</span> <span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/predict/batch/'</span><span class="token operator">+</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">cmpt_hold</span> <span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/cmpt/predict/'</span><span class="token operator">+</span>g<span class="token operator">+</span><span class="token string">'/0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">cmpt_swing</span> <span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/cmpt/predict/'</span><span class="token operator">+</span>g<span class="token operator">+</span><span class="token string">'/1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">query_position_file</span> <span class="token operator">=</span> <span class="token parameter">g</span> <span class="token operator">=></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:8080/cmpt/position/'</span><span class="token operator">+</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/**  * post方法，对应post请求  * @param &#123;String&#125; url [请求的url地址]  * @param &#123;Object&#125; params [请求时携带的参数]  */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>data<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * get方法，对应get请求 * @param &#123;String&#125; url [请求的url地址] * @param &#123;Object&#125; params [请求时携带的参数] */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">params</span><span class="token operator">:</span> params        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="3总结与建议"> <center>3.总结与建议</center></span></h2><p>我们今年因为疫情的影响，软件课设推迟到了开学验收，因此我们的项目主要是寒假进行完成的。在这次的软件课程设计中，我们小组三人针对这一软件项目的实现进行了分工，其中我主要负责前端网页的设计以及和前后端的连接，在着手前端的设计之前自己从来没有接触前端方面的知识。首先我进行了html、css以及JavaScript基础三件套的学习，对前端的web开发有了一个基本的了解。其中这个过程是比较困难的，首先第一个问题，网页页面如何设计得既符合要求，可实现所有功能，且足够美观？这一问题经过我们小组的讨论，使用ps软件自行设计出了我们小组的网页页面，于是这一问题得到解决。其次如何将代码写的简洁高校并可较为方便地与后端进行数据交互是令一个遇到的问题。这一过程中，我发现三件套可能并不能很好地满足我们小组的想法，于是我进一步学习了Vue这一轻量级框架，方便代码的管理与整体的交互。然而开始在我写好两个页面之后，出现了新的问题，如何画图？首先我学习了axios的使用，利用post与get方法封装前端的接口，再完成与后端的数据库连接后，可以正常接收到来自后端的处理过的数据。数据问题解决了，那图像问题怎么办呢？因此我又进行了echart和canvas的学习，最终理解了图形可视化的原理。但是因为在页面上坐标的显示与像素点一一对应，会有一个页面显示的偏差，而后端传递过来的数据是在原图的坐标基础上计算得到的，因此需要通过一定的数学方法进行坐标变换，经过我们小组的讨论与参数调节之后，图形可视化问题得到完美的解决。在这个过程中我从一个从未接触过前端web开发的小白逐渐了解到这方面很多的前端知识以及实现原理，了解了正常软件开发中的一些过程，如何做好前后端的交互更是有了比较清晰的认识，更加明白了从实践中来、在实践中学习的含义。在软件开发的过程中，我感受到的不仅是个人能力的提高，在与小组队友之间的讨论与学习之中，更是意识到了团队协作的重要性，我们一起进行接口的一一调试时。很快就将项目完成。我们了解到彼此之间相互学习的重要性，最后，我们对自己的结果也比较满意，也希望今后能够通过团队合作进一步提高自己的能力！对于这门软件课程设计的一些建议，个人认为包括，希望每个人都能前端、后端、算法都会是合理的，但是一般情况下，一个项目的分工是不能出现两个人同时负责某一个部分，这样不利于项目的进展，作为学生，我更倾向于每人负责一部分，因为如果我没有什么基础的话，我需要同时学习其他部分的开发还是有一定的困难。第二个是希望测试数据多给一些，在本次实验中就是在测试的六组数据中效果很好，但是在验收的时候就出现了一些 bug，因为我们小组错把局部现象当作了一般情况，最后当场调试代码出现了一些问题，结果验收结束这一问题我们小组也没能很好的解决。总而言之，软件课程设计这门课程任务的存在确实是能够让我们的能力得到提高的，同时也对一个软件的完整框架有所了解。在最后也是希望软件课设这门课程也能越来越好！</p><h2><span id="4参考资料"> <center>4.参考资料</center></span></h2><p>[1] 穆瑾轩.Vue详细介绍及使用.<a href="https://blog.csdn.net/xiaoxianer321/article/details/111560355">https://blog.csdn.net/xiaoxianer321/article/details/111560355</a>，2021-01-28</p><p>[2]  shenroom.axios请求配置.<a href="https://blog.csdn.net/qq_41772754/article/details/88075391">https://blog.csdn.net/qq_41772754/article/details/88075391</a>,2019-03-02</p><p>[3]  Felix Scholkmann, Jens Boss, and Martin Wolf. An efficient algorithm for automatic peak detection in noisy periodic and quasi-periodic signals. <em>Algorithms</em>, 5(4):588–603, 2012.</p><h2><span id="附录"> <center>附录</center></span></h2><h3><span id="a-前端代码结构"> A 前端代码结构</span></h3><p><img src="/wandering.github.io/wandering.github.io/2023/03/26/%E5%AE%A4%E5%86%85%E8%A1%8C%E4%BA%BA%E5%AE%9A%E4%BD%8D%E8%BD%A8%E8%BF%B9%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86/struct.png" alt="struct"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;1引言&quot;&gt; &lt;center&gt;1.引言&lt;/center&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;11-项目背景&quot;&gt; 1.1 项目背景&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;111-室内定位&quot;&gt; 1.1.1 室内定位&lt;/span</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CLAD Reading note</title>
    <link href="https://wanderer7-sk.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/"/>
    <id>https://wanderer7-sk.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/</id>
    <published>2023-03-21T00:15:34.000Z</published>
    <updated>2023-03-22T06:46:35.306Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="abstract"> Abstract</span></h2><p>原文：CLAD :A realistic Continual Learning benchmark for Autonomous Driving, generated by HuaWei Noah’s Ark Lab</p><div class="row">    <embed src="/PDF/document.pdf" width="100%" height="550" type="application/pdf"></div><p>CLAD：新的自动驾驶持续学习基准，侧重于物体分类和物体检测问题（object classsification and object detection）</p><p>数据集：SODA10M</p><p>CLAD-C： 在线分类基准，通过一个时间顺序的数据流实现，提出了类和域增量挑战（class and domain incremental）</p><p>CLAD-D： 域增量连续对象检测基准</p><h2><span id="introduction"> Introduction</span></h2><p>对于一个自动驾驶机器学习系统，知道一个模型将如何、在何处使用，以及它将如何失败，几乎是一项不可能的任务。虽然避免所有可能的失败是不可能的，但降低将新知识纳入系统的成本是一个更可行的目标。对于机器学习的数据集，是在一个环境（context）中收集的，这个环境最终决定了机器学习过程中包含完整集合中的哪些对象</p><p>认识到这种环境（context）很少是恒定的，持续学习（CL）研究如何使神经网络能够以尽可能低的成本从不断变化的上下文中吸收新知识。如果没有持续的学习，解决故障案例并扩展到新的领域需要从头开始重新训练和调整模型。鉴于当代模型的尺寸不断增加，这将产生巨大的能量和时间成本。一个简单而直接的想法是仅根据新数据优化模型。但是这种技术微调会导致旧数据性能快速下降。今天，这被称为灾难性遗忘，是持续学习的最大挑战：<strong>遗忘旧知识不能是将新知识纳入系统的结果</strong>。</p><p>随着持续学习的发展，需要越来越严格的基准和路线来可靠地评估正在取得的进展。早期的benchmarks侧重于分类问题和流行数据集的拆分，通常是所有可以的类都被人为地划分为不同的tasks（或者contexts），随后逐个task进行模型训练，并不访问过去或者未来的数据，CL算法的性能通过每个task的最终精度来评估。这些方法构成了人为的挑战，人为（随机）选择的分布变化不能保证与真实世界的context保持一致，而且图像分类的数据集通常被设计和简化为在foreground中只有一个object。</p><p>本文描述了新的CLAD（自动驾驶持续学习基准）的设计与想法。其中CLAD-C上测试了一个关于沿时间维度自然发生的context变化的连续分类模型，ClAD-D关注更显示的连续对象检测问题。本文引入这两种设置，总结了关于最有前途的提交想法的进一步细节和实验，讨论了未来的研究方向，以改进基准，以及总体上的持续学习</p><p>本文的主要贡献：</p><ol><li>回顾了当前CL-benchmarks及其相互关系和它们中缺点的审查。</li><li>引入了两个新的CL-benchmarks，以更接近现实问题中遇到的CL场景</li><li>回顾SSLAD ICCV 关于proposed benchmarks的最佳表现方法，强调了改善当前持续学习状态的具体方法。</li></ol><h2><span id="a-continual-learning-framework"> A Continual Learning Framework</span></h2><p>本节文章回顾了已经提出的tasks 和 datasets，重点介绍作者认为的以计算机视觉为重点的任务与数据集。</p><h3><span id="21-continual-tasks"> 2.1、Continual Tasks</span></h3><p>Class-incremental learning：类增量学习是指，不同时刻到达的数据属于同一任务的不同类别，类增量学习要求模型进行单头输出，并且能够增加输出的类别。相比于任务增量学习，类别增量学习前后数据之间的互相干扰更大，难度更高.（x的类分布增加，y标签的分布也增加）</p><p>Domain-incremental learning：域增量学习是指，不同时刻到达的数据属于同一任务的相同类别，但是数据分批次到达，且领域（domain）发生了变化，不同批次的数据不再符合静态同分布假设。在这个意义上，域增量学习与在线学习有相同之处，但增量学习突出强调了模型的抗遗忘能力.</p><p>task-incremental learning：任务增量学习是指不同时刻到达的数据分属于不同的任务，同一任务的数据能够一个批次全部到达。由此导致的一个特点是，在一个任务中，我们可以获得当前任务的全量数据，从而可以遵循当前神经网络的学习范式，在独立同分布的假设下训练模型。同时，既然不同任务的输出互相独立，模型可以通过多头网络的方式实现。这也意味着，在预测阶段，我们需要根据需要指定输出头。</p><h3><span id="22-contemporary-cl-for-computer-vision"> 2.2、Contemporary CL for Computer Vision</span></h3><p>统计分析了2017-2022年的一些papers，对他们的工作有了一个初步的统计结论</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-1.png" alt="image-1"></p><p>其中，90%使用非连续数据集，并以离散的间隔随机改变P(X)，这样每个类在单个上下文中只有非零概率(严格的类增量)。8.5%改变了P(X)而不影响P(Y)(严格的域增量)，只有1.5%包含更渐进的上下文切换。虽然这些基准测试中的随机和离散上下文开关只是cl -问题空间的一小部分，但它们目前被用于评估几乎所有新的cl -算法的质量。</p><h3><span id="23-towards-more-realistic-benchmarks"> 2.3、Towards more realistic benchmarks</span></h3><ul><li>尽管离散和随机分布移位是研究持续学习的一个有趣的工具，但如前所述，它们不一定代表可以使用持续学习系统的不断变化的环境。</li><li>实际上在严格的类增量和域增量学习之间存在一个完整的环境变化连续体</li><li>CORe50，iCub， Toys-200：现实的CL基准应该能够访问同一对象的多个视图，这与P（x）更逐渐变化的背景相一致</li><li>部分人批评CL基准中缺乏类重复，并认为这是人为地增加类增量学习的难度，不符合现实世界的场景。</li><li>Wanderlust、Clear、CLOC利用一天的时间作为环境变量，数据和标签分布都会发生逐渐且非随机的变化，以接近真实世界的设置</li></ul><p>真实世界基准应该是什么样的呢？文章给出了不同工作的不同见解。</p><h3><span id="24-evaluationn-of-continual-learning"> 2.4、Evaluationn of Continual Learning</span></h3><p>CL方法通常使用训练结束时每个任务的平均准确度和平均向后转移（BWT）进行评估；一项任务在训练后和所有任务训练后的准确性之间的差异。这些指标不一定与CL的目标——将新知识纳入已经运行的系统一致。按理来说，最好的算法是具有最高最终精度的算法，然而我们注意到BWT度量也能够受益于训练期间的低精度（即，这种效果改善了度量）。相反，文章认为最好的CL算法是具有高精度的算法，其可以通过包含新数据来改进，而不会突然地性能下降。理想情况下，这将在训练期间被连续测量，并且用精度曲线下的面积作为度量。实际上，这具有很高的计算成本，并且在精心选择的离散间隔进行测试是一种合理的近似。</p><h2><span id="continual-learning-benchmark-for-autonomous-driving"> Continual Learning Benchmark for Autonomous Driving</span></h2><p>应用SODA10M数据集描述作者的continual learning benchmark。</p><h3><span id="31-soda10m-dataset"> 3.1、SODA10M Dataset</span></h3><p>该数据集包含10M个未标记图像和20K个标记图像，图像数据由行车记录仪记录的片段组成，这些片段是从中国四个城市行驶的车辆中获取的，每隔10秒记录一次图像。按时间顺序排列图像在很大程度上需要一辆汽车探索城市及其周边地区的视觉镜头。图像标签集有6个对象类的边界框注释，并涵盖不同的“域”（城市、天气状况、一天中的时间和道路类型），随后将未标记的图像用于未来的工作，并将标记的数据集部分专门用于我们的基准挑战。</p><h3><span id="32-challenge-subtracks"> 3.2、Challenge  Subtracks</span></h3><p>目前存在着两个主轴，沿着这两个主轴不断学习现实世界任务的现实性增加：第一，问题的表述本身，第二，更现实的语境转移。 理想情况下，本文将这些方面组合成一个单一的综合基准。 然而，鉴于这个连续的目标检测仍处于起步阶段，本文认为制作两个独立的基准更有用； 沿着每一个轴，但保留未来合并的潜力。 在CLAD-C基准中，本文首先关注使用时间戳作为上下文变量的自然发生的分布移动，而在CLAD-D基准中，本文关注连续的对象检测。</p><h3><span id="33-clad-conline-continual-classification"> 3.3、CLAD-C：Online Continual Classification</span></h3><p>Setup：文章的第一个设计原则涵盖了在线设置，其中没有明确的任务边界。利用SODA10M中图像的时间元数据，我们可以构建一个跨越三天三夜的在线数据流。这条流以不同的频率显示域的变化:从高速公路到城市街道的变化是有规律的，几乎是突然的，而从白天到晚上的变化则不那么频繁，更渐进。最后，天气可能会不可预测地迅速变化。逐渐改变数据分布会导致图像流中不同类别出现的频率发生逐渐但剧烈的变化(例如，在夜间和高速公路上行人明显很少)。像CORe50这样的基准测试的多视图论证在这里也适用。因为这些图像的间隔是10秒，所以之前图像和场景中的物体很有可能出现在当前图像中，很可能是从不同的观看角度。正如Cossu等人所认为的，过去类别的重复构成了一个现实的环境和场景，这反映在可用的时间流中。然而，除了汽车对象之外，在某些时期，所有对象类都会从流中消失。在这样的时刻，我们推测灾难性的遗忘可以通过使用适当的CL-strategies来预防。</p><p>为了创建对象实例流，我们从按时间顺序排列的图像开始，并从它们的边界框中剪切目标对象。然后我们将它们的纵横比更改为1:1(沿最短轴填充)，添加额外填充，并重新缩放到32×32。过大和太小(&lt; 1024像素)的对象被删除。</p><p>Setup：</p><ul><li>利用SODA10M中图像的时间元数据，我们可以构建一个跨越三天三夜的在线数据流，这条流以不同的频率显示域的变化</li><li>逐渐改变数据分布会导致图像流中不同类别出现的频率发生逐渐但剧烈的变化</li><li>因为这些图像的间隔是10秒，所以之前图像和场景中的物体很有可能出现在当前图像中，很可能是从不同的观看角度。正如Cossu等人所认为的，过去类别的重复构成了一个现实的环境和场景，这反映在可用的时间流中</li><li>为了创建对象实例流，我们从按时间顺序排列的图像开始，并从它们的边界框中剪切目标对象。然后我们将它们的纵横比更改为1:1(沿最短轴填充)，添加额外填充，并重新缩放到32×32。过大和太小(&lt; 1024像素)的对象被删除。</li><li>然而，除了汽车对象之外，在某些时期，所有对象类都会从流中消失。在这样的时刻，我们推测灾难性的遗忘可以通过使用适当的CL-strategies来预防。</li></ul><p>Evaluation：AMCA（Average Mean Class Accuracy）：</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-2.png" alt="image-2"></p><p>Baselines：</p><ul><li>Naive finetuning：受制于灾难性的遗忘，其中类的准确性密切跟随流中存在的类分布，以及昼夜之间的变化。</li><li>Oversampling replay:克服大类的不平衡问题，我们允许存储1000个样本，在所有类中平均分配。在更新模型之前，每个传入的批都使用来自内存的样本进行扩展，使每个类的样本数量至少等于2b/C，其中b为批大小，C为类数量。</li></ul><p>微调和过采样基准分别达到36.8和53.5 AMCA。两个基准测试都使用ImageNet预训练的Resnet50进行训练，使用SGD和10个批次(新样本)。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-3.png" alt="image-3"></p><p>fine-tuning：在实践中，由于数据集不够大，很少有人从头开始训练网络。常见的做法是使用预训练的网络（例如在ImageNet上训练的分类1000类的网络）来重新fine-tuning（也叫微调），或者当做特征提取器。</p><p>oversampling：指对训练集中某类样例增加采样次数以减小类别不平衡的问题</p><h3><span id="34-clad-dcontinual-object-detection"> 3.4、CLAD-D：Continual Object Detection</span></h3><p>setup：考虑到目标检测对大量数据的依赖，以及SODA10M中标记数据的有限数量，我们为自动驾驶设计了一个域增量基准测试，该基准测试补充了现有的替代CL基准测试。我们的初步实验确定了高速公路、夜晚和雨天构成的域会对晴朗天气、白天城市中心域造成干扰，而白天城市中心域拥有最多的可用数据。我们将标记数据分为四种情况:(1)晴朗的天气，白天在城市街道上，(2)晴朗的天气，白天在高速公路上，(3)晚上，(4)白天下雨。我们强调，模型在测试时不知道图像属于哪个域或任务，但我们确实允许每个任务有多个epoch，使问题更可行。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221101112053278.png" alt="image-20221101112053278"></p><p>evaluation：我们在训练结束时使用每个任务的平均mAP。另一种选择是在每个任务之后测量准确性，并在所有测试时间中取一个平均值，就像CLAD-C基准测试一样。我们选择在这里不这样做，为了(1)保持与当前的COD评估标准一致(2)赋予每个任务同等的权重。我们报告的mAP为IOU的0.5级别，紧随VOC基准。</p><p>Baselines：本文通过使用ImageNet Resnet50骨干网对FasterRCNN网络上的每个任务进行微调，测试了CLAD-D基准测试的难度。使用SGD更新模型，学习速率为0.01，动量为0.9，批量大小为8。在第8和11个epoch，学习率衰减了10倍。最终任务平均mAP为59.8。图5显示了训练每个任务后的结果，暴露了学习后的任务遗忘。尽管遗忘不像在增量分类设置中通常观察到的那样是灾难性的，但可以观察到，在这种设置中有效利用所有数据是一个挑战</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221101111709775.png" alt="image-20221101111709775"></p><h2><span id="iccv-sslad-challenge-results"> ICCV SSLAD challenge results</span></h2><p>CLAD-C和CLAD-D都是2021年10月ICCV SSLAD讲习班的一部分，分别有49和55个团队参加。在本节中，我们将总结每个基准测试的前三名参与者的技术和想法。</p><h3><span id="41-clad-c"> 4.1、CLAD-C</span></h3><p>选择了ICCV SSLAD challenge前三名的模型进行定性分析。</p><p>section：</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221031195013213.png" alt="image-20221031195013213"></p><p>在挑战过程中，施加了一些限制:模型大小不能超过ResNet50参数的105%，只允许在Imagenet上进行预训练，批次大小不能超过10个新样本，任何类型的样本内存限制在1000个样本。</p><p>Architectures：C1和C2都使用标准Resnet50，而C3使用Resnet50- d。这是在[31]中引入的，改进了ImageNet Top-1分类约1%，而不添加更多的参数。C2还测试了DenseNet169和EffecentNetV2，但在这些网络上报告的结果较差，但两者在CIFAR10(具有相同的图像大小)上的非顺序设置中表现更好。所有模型在Imagenet上进行预训练。</p><p>Optimizers: C1和C3采用随机梯度下降法(SGD)，学习率为0.01。C2使用Adam[34]，学习速率为0.0002。C1不使用动量、权值衰减或学习率调度。C2和C3没有提到权值衰减或动量，而是使用多步学习率调度器。</p><p>Data Augmentations:这三种都是水平翻转。C1将升级到224 × 224，这是原始Imagenet的大小。他们报告说，这对最终结果有很大的影响，尽管这样做没有添加任何信息。他们假设这是由于imagenet预先训练的Resnet的卷积滤波器被校准到这个尺寸。C2增加了透视变换和随机擦除，C3增加了随机旋转和颜色抖动。C2也测试了mixup，但提到这没有帮助。最初的mixup论文只报告了90时代以后Resnet50的非常有限的改进，更大的改进用于更大的网络和更多的迭代。</p><p>Replay：所有三个获奖作品都使用了某种形式的回放，但在样本存储和使用的细节上有所不同。重放是一种非常有效和高效的持续学习技巧[36]，但也是唯一在挑战规则中明确提到(和限制)的方法。C1在其内存中每个类保留100个样本，每个类使用储层抽样[37]选择样本。C2对输入流使用过采样，并手动设置权重。这近似于储层采样，但样本进入/离开内存的概率是固定的，而储层采样的概率是根据每一类样本的数量动态更新的。C3使用了彩虹记忆[38]的想法。他们计算新批次中每个样本的熵，然后存储5个熵最高的样本。如果内存已满，则计算所有样本在各种增广下的不确定度。然后去除50%最确定的样本。这与[38]不同，在[38]中，样本存储在所有级别的不确定性中。这个想法是作为一个代理来选择不同的样本。C1、C2、C3每批分别使用5+5、4+6、10+6个新老样品。</p><p>Other Continual Learning techniques：除了前面提到的技术，前三名的提交还使用了其他持续学习的方法，在这里简要解释一下。C1使用CWR (Copy Weight with Reinit)[39]，它在每个任务之后存储头的权重，并使用随机初始化的权重重新启动。在每项任务完成后，使用指数移动平均将新旧权重合并。这在技术上需要任务边界，这并不意味着要在挑战中使用。然而，人们也可以在训练时使用任意间隔或检测任务边界，然后应用该技术。C2使用ce损耗的标签平滑版本，这被假设为创建更好的结构化特征空间[40]。他们还测试了CWR[39]和LWF (Learning Without forget)[41]，但报告使用这两种方法的效果更差(而C1确实提到CWR在他们的设置中很重要)。C3将培训分为两部分。第一部分学习度量空间，使用无监督和有监督对比损失[42]。</p><p>在这个空间的顶部，使用焦损失[43]训练分类头，这通常用于密集目标检测，以更容易地学习困难的类(类的样本很少)。除了焦点损失外，他们还在记忆样本的过去和当前预测logit上使用蒸馏损失，就像C2中的标签平滑一样，温度缩放。</p><h3><span id="42-clad-d"> 4.2、CLAD-D</span></h3><p>在CLAD-C中，所使用的体系结构的差异相对较小，而它们的方法差异更大。相比之下，D1使用的架构与D2和D3截然不同，而D1和D2的方法只在重要的细节上有所不同。</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221031201847322.png" alt="image-20221031201847322"></p><p>Architectures：D2和D3使用FasterRCNN[44]模型的默认 torchivision implementation，带有Resnet50特征金字塔主干，在Microsoft COCO上预先训练。D1将region proposal network改为Cascade R-CNN，其中有在多个IOU级别上训练的回归块。对于Resnet101主干网，这只提供了有限的改进。D1随后将卷积主干换成Swin transformer，这使他们的结果增加了超过15个mAP点，几乎完全缓解了遗忘(从Resnet101的14.3 mAP点到Swin transformer的1.7 mAP点)。基线Swin Transformer的参数数量大约是Resnet50的4倍，但是改进比中非顺序结果的预期要大，在中仅观察到6个mAP点的增加(在Microsoft COCO上)。</p><p>Optimization and augmentation：D1先在ImageNet1K上训练骨干，然后使用多步学习率调度器对挑战数据进行50个周期的训练。D2和D3使用torchvision提供的骨干，这些骨干是在Microsoft COCO上预先训练的。他们也使用多步骤调度程序（multistep schedulers），但在每个任务完成后重新使用一个循环调度（cyclic schedule）。</p><p>Distillation：D1和D2都使用额外的蒸馏损失将知识从一个接受过去任务训练的教师网络转移到接受新任务训练的学生网络。D2只提取网络的输出，如Shmelkov et al。D1与FasterILOD相似，使用了骨干和RPN输出上的蒸馏损失。两者都使用重放的图像进行蒸馏，而最初的Faster - ILOD依赖于新图像中未标记的旧样品的存在。</p><p>Replay：D1存储250张图片，用来提取老师的主干和RPN。他们没有提到他们是如何选择存储哪些样本的。D2为每个任务存储行人、自行车和三轮车最多的图像。他们没有具体说明如何使用重放。D3对2个新样本重放2个旧样本，随机存储图像。他们还提到了平衡抽样的测试，他们存储了最多三轮车的图像，但这导致了更糟糕的结果。</p><p>other：在D2中，网络的输出是温度缩放的，这导致不太自信的预测。</p><p>根据作者的说法，这导致了更好的校准和更高的mAP。</p><h2><span id="discussion"> Discussion</span></h2><ul><li>工作持续学习解决方案的一个重要特征是它可以从图像中提取的高级特征的通用性。简单地优化一个模型来对可用的任务数据进行分类，就可以使模型走到一个捷径解决方案，这样的解决方案只了解作为当前context一部分的实例之间的一个可能没有意义的差异。这些差异可能不足以区分当前实例与未来对象。</li><li>从一个实例中学习尽可能多的高级概念，有助于学习新的实例，因为模型已经学习了关于过去特征的概念，这些概念将它们与新对象区分开来。如果第一个任务是学习对柠檬和酸橙进行分类，提取这些水果的颜色可能就足够了。然后，如果下一个任务包括香蕉，模型必须了解柠檬和香蕉的形状来区分它们。这需要访问不符合cl -设置的过去数据。</li><li>在CLAD-C中，所有前三名的提交都是从一个Imagenet预训练模型开始的，该模型由于更大的稳定性和更好的初始特征，已被证明可以减少cl -系统中的遗忘。尽管它们有帮助，C1表明盲目使用预先训练的模型可能是次优的。尽管预先训练的卷积滤波器在相当大的窗口上是尺度不变的，但对于低于100像素的对象，其性能会迅速下降。因此，将CLAD-C的32 * 32对象升级到ImageNet的平均224 * 224对象是有用的，不是因为它增加了信息，而是因为模型适应这些大小(99%的ImageNet边界框大于100 * 100像素)。</li><li>具有良好的一般特征的影响可能最显著地表现在D1对CLAD-D的影响上，仅仅通过使用基于transformer的主干，他们就展示了令人印象深刻的改进。从本质上讲，vision transformers不仅优于基于卷积的网络，而且在经验上对不断变化的输入分布和异常值更稳健，对高频扰动更不敏感。transforms在持续学习中的潜力最近已在几项研究中得到验证，但收敛速度慢以及需要大量(预)训练数据构成了严重的挑战。</li><li>除了建立在预先训练的模型和更好的架构之上，cl -系统还应<strong>尽可能多地从可用数据中学习</strong>，这是当代解决方案尚未达到的极限。C3最明确地解决了这一挑战，直接优化以获得良好的特征嵌入，在此基础上训练分类器，这与其他使用对比损失构建良好表示的工作相似。通过这种方法学习到的特征已经被证明更健壮，结构更好。使用<strong>标签平滑损失</strong>，如C2和C3，在这方面也有帮助。标签平滑创造了一个更好的条件特征空间:“标签平滑鼓励倒数第二层的激活接近正确类的模板，与错误类的模板同样距离”。最后，我们注意到，所有前三名参与者都使用数据增强，可以减少快捷方式的数量，从而获得更好的表示。</li></ul><p>最后，我们想指出CLAD-C中的rehearsal和CLAD-D中的蒸馏的盛行。在连续分类中，Rehearsal一直是主要的方法，产生了许多变体，但对于哪些样本在CL中是最好的，以及它们究竟应该如何使用，还没有明确的答案。GDUMP甚至表明，该模型有可能只是通过从内存中提取所需的所有信息来重新学习对旧类进行分类。在检测中，所有方法都依赖于新任务训练过程中模型的蒸馏。这可能是受到SOTA方法的影响。</p><h2><span id="conclusion"> Conclusion</span></h2><p>在这项工作中，我们首先评估持续学习中目前使用的基准，以及它们如何与最可能应用持续学习的现实场景相关联。我们设计了两个提高cl -benchmark真实感的基准，使用更少的随机和更渐进的上下文转移，并从分类转移到目标检测。这两个赛道都是ICCV ’ 21的一个挑战的一部分，其中前三名参与者为我们提供了关于现实CL应用的挑战和可能的解决方案的有用见解。最后，我们讨论了CL研究的未来方向，包括从一开始就构建更好的特征表示，更好地理解CL最重要的技术——rehearsal和distillation，以启发未来的改进。我们相信这将为今后的工作提供有前途的方向。</p><h2><span id="appendix"> Appendix</span></h2><h3><span id="a1-context-as-a-framework-for-cl"> A.1. Context as a framework for CL</span></h3><p>class incremental learning:每个context只对于特定的某些类有非零概率，并且每个类只在单个context中被观察到。</p><p>domain incremental learning：在每个context中以相同的频率观察所有类，但它们的外观会发生变化（旋转等）。</p><p>CLAD-C：与人工设计的context相反，可以使用真实世界的context。例如，在CLAD-C中，通过按时间顺序“观察”可用数据，context取决于照片拍摄的地点、一天中的时间和天气。这些变量对感兴趣对象的外观及出现频率有一定影响。</p><h3><span id="a2-cl-benchmarks-and-their-contexts"> A.2. CL-benchmarks and their contexts</span></h3><h3><span id="b1-split-details"> B.1、Split Details</span></h3><h3><span id="b2domain-gaps"> B.2/Domain Gaps</span></h3><h2><span id="extra3a_1-clad-c"> Extra：3A_1 CLAD-C</span></h2><h3><span id="1-competition-requirement"> 1、Competition Requirement</span></h3><p>3A跑道比赛的重点是持续的物体识别。数据集(见第2.1节)由6个类组成。样本以流的方式到达模型，保持原始数据的时间一致性。样本一次最多要处理10个样本，模型需要随时可供评估，在训练和测试之间不需要任何额外的计算。此外，数据必须只看到一次，因此不允许在同一经验上增加时间，所以一旦一组10个样本被模型处理，相同的样本就不能进一步利用(除非有有限的重放内存)。所需额外经费如下:</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221106201436639.png" alt="image-20221106201436639"></p><h4><span id="11-soda10m-dataset"> 1.1、Soda10M Dataset</span></h4><p>本次竞赛使用的数据集是Soda10M数据集[2]，这是一个为自动驾驶中的自我监督学习和领域适应而收集的大规模数据集。原始帧每10秒在32个不同的城市中收集一次，在不同的天气条件下，从这些帧中裁剪出几个边界框，用作比赛的输入。在我们看来，在数据集的具体挑战中，与竞争相关的主要问题，即可以极大地影响基于持续学习的分类器性能的因素，有以下几点:</p><ul><li>Occlusions：我们注意到，在补丁中描绘的大量对象都被遮挡了，甚至被一个属于Soda10M数据集中的类的对象遮挡了(例如，几辆公共汽车被汽车遮挡);因此，这些遮挡很容易骗过分类器的预测。</li><li>Image resolution：放置在远离采集设备的背景中的物体，一旦缩放到竞赛的作物大小(64 × 64)，可能会以非常低的分辨率在视觉上出现。</li><li>Bad quality images：在夜间和恶劣天气条件下拍摄的图像深受光线差和对比度低的影响。</li></ul><h3><span id="2-model-and-hyperparameters"> 2、Model and Hyperparameters</span></h3><p>我们采用ResNet-50[3]神经网络作为分类模型。最后一个完全连接的层被替换以适应竞争数据集，在最终的神经元中从1000 (Imagenet上的类的数量)传递到7(竞争中的类的数量加上一个空的)。</p><p>我们添加偏差以保持体系结构尽可能与原始网络相似。我们利用ImageNet-1000数据集[1]上的预训练模型。重量已经从official torchvision website下载。在ImageNet上报道的模型top-1精度为76.13%。我们使用随机梯度下降(SGD)优化器，其学习率为0.01，动量和权值衰减设置为0。作为损失函数，我们采用标准形式的交叉熵(CE)损失，可表示为:</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221106203150937.png" alt="image-20221106203150937"></p><h3><span id="3-training-procedure"> 3、Training procedure</span></h3><p>首先在一个张量(b, c, w, h)中转换输入批，其中b = 10(批大小)，c = 3 (RGB图像通道)，w = h = 64(图像尺寸，然后裁剪为平方)。然后，通过最近邻插值调整张量的宽度和高度，从64 × 64到224 × 224，以类似于模型预先训练的ImageNet数据集的原始图像大小。尽管这一操作可能会降低补丁的外观(输入补丁的原始大小约为最终大小的1/12)，我们注意到模型的卷积核在调整大小的图像中响应更好。这可以解释为ImageNet包含的类(如卡车、汽车、自行车等)与Soda10M数据集中的类类似，因此卷积滤波器已经过调优，以从这些图像中提取强大的特征。相同大小的图像包含相同大小(以像素为单位)的对象，因此，如果保留原始大小，则认为预先训练的过滤器反应更好是正常的。</p><p>然后，应用“动态”数据增强技术，以增加输入张量的变化。由于基准测试的特性，由于相同对象的许多相似图像一起提供给网络，因此输入的多样性是有限的。The motivation is the streaming natyre of the frames from which input patches are cropped（即时间顺序被保留，原始帧以低帧率获得），因此，在将张量传递给模型之前，进行水平翻转，并将原始和翻转后的版本都输入到模型中。</p><p>最后，只有在第一次体验期间，生成的批数据才被放入临时内存(大小为10)，并通过模型两次。在每前进一步后，计算损失和梯度，然后应用优化程序。这种操作的动机是观察到，在第一次经验中，模型的学习(特别是考虑到样本很少的类)可以通过看到更多的(甚至相同的)样本来提高。它试图模仿传统的机器学习训练过程，在这个过程中，相同的图像被多次输入到网络中。</p><h3><span id="4-classification-head-protection"> 4、Classification Head Protection</span></h3><p>神经网络中灾难性遗忘的主要原因之一是所谓的“孤立学习”问题。当每个经验中只有有限数量的类出现时，或者当一些类的代表不足时，即它们的样本数量相对于训练数据中的其他类非常少，导致这些类被遗忘时，这个问题就会出现。遗忘主要发生在分类头，即所采用的神经网络的最后一层(通常是全连接层)。</p><p>在我们的实验中，我们在Soda10M数据集上观察到同样的效果，可能是由于某些类别的存在非常有限(例如三轮车)，甚至完全没有(例如第二种体验只呈现了汽车、卡车和有轨电车)。我们使用[4]中提出的CWR算法来解决这个问题，该算法是作为从顺序批中持续学习的基线技术提出的。</p><p>CWR为分类层保持两组权重，即统一权重(cw)和临时权重(tw):</p><p>cw：包含在整合阶段中使用的来自以前经验的权重。在这个阶段，cw权值与当前经验权值tw合并</p><p>tw：包含用于在当前经验中训练模型的权重。权重在体验开始时初始化为0，只有当前体验类的权重从cw加载。</p><p>（与原始论文不同的是，作者没有像[5]中提出的那样冻结特征提取器的权重）</p><h3><span id="5-replay-memory"> 5、Replay Memory</span></h3><p>重播被认为是对比灾难性遗忘问题最有效的方法之一，特别是在复杂的持续学习场景中。因此，我们决定在我们的实现中采用此范式，同时采用CWR。</p><p>作者创建了6个不同的内存缓冲区，每个类一个。每个缓冲区在大小上都有限制:在我们的最终实现中，我们将所有类的这个限制设置为100，导致最终的样本内存大小为600。我们观察到，在每个类中包含更多的样本，或者减少被记忆的类的数量(只在内存中放入一些类)，都不会产生任何特别的好处。这可能是由于以下原因:</p><p>I)训练集中可使用的三轮车总数为82辆，低于固定的缓冲区大小;</p><p>ii)对于某些类(如汽车)，限制重放样本的数量是很重要的，因为它们代表了绝大多数输入样本。</p><p>增加类缓冲区大小往往会产生负面影响，因为三轮车的数量受到训练数据的限制(不超过82)，而其他类在第一次体验结束时完全占用了它们的缓冲区，使回放内存更加不平衡。以上两点的结合将创造出一个平衡的内存类，因为从第二次体验开始，内存缓冲区就已经满了(除了三轮车类)，不平衡并不明显。我们还注意到，为每个类设置不同的大小不会产生明显的改进。</p><p>作者将小批(大小为10)分为5个来自当前经验的样本和5个来自重放记忆的样本。使用以这种方式组成的小批次，每次体验的小批次数量翻倍。重放数据从重放存储器中随机采样，不进行替换。当内存上的所有采样完成后，再次启动采样过程</p><p>内存的管理方式如下:如前所述，为每个类维护一个维数为100的缓冲区，总共为600个样本。在第一次体验期间，记忆不用于训练，但来自当前体验的样本被积累在缓冲区中。如果一个特定类的缓冲区没有满，并且当前的小批中有相应类的模式，那么所有的模式都将被存储在缓冲区中。如果缓冲区已满，我们使用存储采样[6]，这保证每个样本在体验结束时都有相同的概率进入重放存储器。我们为每个类维护一个计数器，计算到目前为止看到的样本，我们更新内存如下：</p><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221106210516310.png" alt="image-20221106210516310"></p><p>其中d和c是小批中单个样本的数据和类，C是每个类查看样本数量的计数器，M是重放存储器，由每个类的100个元素的缓冲区组成</p><p>（由于我们不希望当前体验中使用的重放内存因插入来自当前体验的样本而改变，所以我们使用剩余的400个空闲内存插槽作为插入的临时缓冲区。对于每一个新的经验，我们从当前经验中插入100/i (i =当前经验的索引)样本(100来自第一个经验，50来自第二个经验，以此类推)。在第一种经验中，我们使用内存M和算法1中描述的操作。对于后续的经验，我们为每个类使用100/i维度的额外缓冲区B。按照算法1进行模式插入，但使用B代替M，缓冲区维数100/i代替100。在一个新的体验开始时，我们从M的每个类中删除100/i个元素，并从B中插入新的重放样本。注意，内存的最大分配是900个样本，因为M的维数总是600，而B的最大维数是300(在第二次体验中每个类50个样本)。）</p><h3><span id="6-contribution-of-the-components"> 6、Contribution of the Components</span></h3><p><img src="/wandering.github.io/wandering.github.io/2023/03/21/CLAD-Reading-note/image-20221106205818700.png" alt="image-20221106205818700"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;abstract&quot;&gt; Abstract&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;原文：CLAD :A realistic Continual Learning benchmark for Autonomous Driving, generated by HuaW</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>浅析大平正芳对中日关系的积极贡献</title>
    <link href="https://wanderer7-sk.github.io/wandering.github.io/2022/11/23/%E6%B5%85%E6%9E%90%E5%A4%A7%E5%B9%B3%E6%AD%A3%E8%8A%B3%E5%AF%B9%E4%B8%AD%E6%97%A5%E5%85%B3%E7%B3%BB%E7%9A%84%E7%A7%AF%E6%9E%81%E8%B4%A1%E7%8C%AE/"/>
    <id>https://wanderer7-sk.github.io/wandering.github.io/2022/11/23/%E6%B5%85%E6%9E%90%E5%A4%A7%E5%B9%B3%E6%AD%A3%E8%8A%B3%E5%AF%B9%E4%B8%AD%E6%97%A5%E5%85%B3%E7%B3%BB%E7%9A%84%E7%A7%AF%E6%9E%81%E8%B4%A1%E7%8C%AE/</id>
    <published>2022-11-23T00:15:34.000Z</published>
    <updated>2023-03-27T06:05:04.342Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="浅析大平正芳对中日关系的积极贡献"> <strong>浅析大平正芳对中日关系的积极贡献</strong></span></h1><h2><span id="摘要"> 摘要</span></h2><p>对中日友好事业有所了解的中国人，大多对“大平正芳”这个名字并不陌生。因为这个名字，和中日友好的历史是紧密联系在一起的。大平正芳始终关注分析中国问题，推进构建和谐的中日关系，为打破中日两国长期存在的僵化关系，推进两国邦交正常化能够早日实现，付出了巨大的努力。同时，大平正芳成为日本首相后，始终在为中日友好关系的向前发展而不断努力。大平正芳从全球化、从促进人类共同发展、从国家长远利益角度来处理协调好中日两国间的关系。因此，大平正芳能够对中日两国的今后发展有正确的评价分析，总结历史，展望未来，结合时代发展潮流，不断推进中日关系平稳发展。</p><p>关键词：大平正芳；对华政策；中日关系</p><h2><span id="一-大平正芳从历史文化渊源和地缘政治角度考虑高度重视日中关系"> 一、大平正芳从历史文化渊源和地缘政治角度考虑，高度重视日中关系</span></h2><p>日中友协等组织于1961年6月向时任日本池田首相询问是否对对话政策进行调整转变时，当时大平正芳作为官房长官，便态度非常鲜明的指出：“不管愿意与否，中国问题是不能不提出来的问题。”由此表明当时大平正芳已关注到必须要注重中国问题，并且及时改变固有的对立的对话政策。同时强调“中国问题对历代的日本政府来说可以说是一道难关”。这里，始终畏缩退让，很难予以回避，如果鲁莽处理，则必将受到挫折，当存在野心时，也必将会无功而返。大平正芳积极总结两国历史，认为日本对华关系以污点居多。所以，在这一认知的影响下，大平正芳始终加强对中国问题的分析和关注，旨在能够协调处理好日中关系。</p><h2><span id="二-反思过去感知未来不负历史重托"> 二、反思过去，感知未来，不负历史重托</span></h2><p>在分析日本对华外交历史基础上，大平正芳切身意识到，日本采取何种对华政策，与日本国家前途发展紧密相关，必须要把两国关系放在极端重要的位置上来。作为一名政治家，必须要高瞻远瞩，加强对这一问题的认知，以一种冷静、热情的态度来协调处理好中日关系，为推进两国今后更好的发展贡献力量。这一理念的形成，与大平正芳对两国历史的深刻总结密切相关。以史为鉴，放眼未来，大平正芳指出，中国的发展并不会对日本的发展造成威胁。中日建交前后，中国及中国人民能够以一种宽广包容的心态来接受日本，这一点令大平正芳深深的触动。为此，大平正芳也特别指出：“日本给中国造成那么大的危害，但中国根本没有要求赔偿，所以不能说中国是好侵略的”。从日本角度上看，大平正芳强调，针对日本之前发动的侵华战争，应该“公正地看待我国是加害者，中国是受害者这样一种日中关系”。结合这一历史观，大平正芳明确这与加害者的责任紧密相关，同时强调：“日本作为加害国，需要对此事进行深刻的反省。”某种层面上，从中我们也能够感受到大平正芳具有崇高的政治良知，他忠实并尊重历史，并且能够从人类正义的角度来反省历史。相应的，从这一历史反思中，大平正芳不断增强对中国的信赖度，并且始终在为协调处理好两国关系做出积极的努力。总之，大平正芳凭借自己敏锐的历史观以及特有的政治智慧，宏观对两国之间长达两千余年的交往历程进程系统全面的审视，反思两国之前的交往历史，以一种新的视角审视两国今后的交往，对今后发展充满了期望。</p><h2><span id="三-基于时代认识把握世界大势积极推进中日友好关系"> 三、基于时代认识，把握世界大势，积极推进中日友好关系</span></h2><p>针对中日关系重要性的认知，大平正芳并非只局限于考察两国历史时空，也并非是只考虑两国间存在的厉害关系，而是他在当时时代发展背景下从全球视野角度，在开展综合分析基础上得到的一种系统评估。大平正芳特别强调，我们不能够将两国关系只停留在是两国的财产，而应该更好的为推进全球稳定和平发展而贡献应有的力量。因此大平正芳关注发展日中关系，是建立在维护日中两国根本利益的前提下进行的，最终目标就是要构建一种平稳和谐的全球关系。</p><p>大平正芳见证了战争给本国及全球各国带来的破坏性影响，所以非常渴望追求和平与发展。并且日本自身存在脆弱性的特点，导致其对和平信念异常渴望。所以，在大平正芳的政治生涯中，他始终致力于追求世界和平与繁荣。他指出，日本外交寻求的国家长远利益，即寻求和平与安全保障，实现这一保障体系的前提是要求构建“政府的对内对外的信用和权威”。以该和平战略思想为指导，太平正芳积极构建良好的中日关系。</p><p>在推进中日友好事业建设上，太平正芳为推进中日友好事业建设付出了巨大的能力，也取得了非常显著的成效，并且为构建良好的中日睦邻友好关系彰显出一种无私的鞠躬尽瘁的精神，在很大层面上这与太平正芳重承诺、讲信义的伟大人格密切相关。不过从目前中日两国关系发展上看，日方部分领导者并未按照这一方向努力，需要我们加强关注。</p><h2><span id="参考文献"> 参考文献</span></h2><p>[1]徐显芬.中日邦交正常化决策研究述要[J].中共党史研究,2022(04):106-115.</p><p>[2]黄忠,李欣.论大平正芳的“中国观”[J].公关世界,2020(12):70-71.</p><p>[3]黄忠.大平正芳对华外交理念及实践[D].东北师范大学,2019.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;浅析大平正芳对中日关系的积极贡献&quot;&gt; &lt;strong&gt;浅析大平正芳对中日关系的积极贡献&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&quot;摘要&quot;&gt; 摘要&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;对中日友好事业有所了解的中国人，大多对“大平正芳</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wanderer7-sk.github.io/wandering.github.io/2022/09/27/hello-world/"/>
    <id>https://wanderer7-sk.github.io/wandering.github.io/2022/09/27/hello-world/</id>
    <published>2022-09-27T00:15:34.000Z</published>
    <updated>2023-03-27T06:07:20.013Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2><span id="quick-start"> Quick Start</span></h2><h3><span id="create-a-new-post"> Create a new post</span></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3><span id="run-server"> Run server</span></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3><span id="generate-static-files"> Generate static files</span></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3><span id="deploy-to-remote-sites"> Deploy to remote sites</span></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
